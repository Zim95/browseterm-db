"""Initial migration - create all tables

Revision ID: e2a25e74dee5
Revises: 
Create Date: 2025-09-02 19:30:23.466378

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = 'e2a25e74dee5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.Enum('INR', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.Column('max_containers', sa.Integer(), nullable=False),
    sa.Column('cpu_limit_per_container', sa.String(length=20), nullable=False),
    sa.Column('memory_limit_per_container', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_index('idx_subscription_type_amount', 'subscription_types', ['amount'], unique=False)
    op.create_index('idx_subscription_type_is_active', 'subscription_types', ['is_active'], unique=False)
    op.create_index('idx_subscription_type_type', 'subscription_types', ['type'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('provider', sa.Enum('GOOGLE', 'GITHUB', name='authprovider'), nullable=False),
    sa.Column('provider_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_email_provider', 'users', ['email', 'provider'], unique=False)
    op.create_index('idx_user_is_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_user_provider', 'users', ['provider'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('containers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('image', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('RUNNING', 'STOPPED', 'FAILED', 'DELETED', name='containerstatus'), nullable=False),
    sa.Column('cpu_limit', sa.String(length=20), nullable=False),
    sa.Column('memory_limit', sa.String(length=20), nullable=False),
    sa.Column('port_mappings', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('environment_vars', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_container_deleted_at', 'containers', ['deleted_at'], unique=False)
    op.create_index('idx_container_status', 'containers', ['status'], unique=False)
    op.create_index('idx_container_user_id', 'containers', ['user_id'], unique=False)
    op.create_index('idx_container_user_status', 'containers', ['user_id', 'status'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('subscription_type_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'CANCELLED', 'PENDING', name='subscriptionstatus'), nullable=False),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('valid_until', sa.DateTime(), nullable=False),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_type_id'], ['subscription_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('idx_subscription_auto_renew', 'subscriptions', ['auto_renew'], unique=False)
    op.create_index('idx_subscription_status', 'subscriptions', ['status'], unique=False)
    op.create_index('idx_subscription_type_id', 'subscriptions', ['subscription_type_id'], unique=False)
    op.create_index('idx_subscription_user_id', 'subscriptions', ['user_id'], unique=False)
    op.create_index('idx_subscription_valid_until', 'subscriptions', ['valid_until'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=True),
    sa.Column('subscription_type_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.Enum('INR', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'FAILED', 'REFUNDED', name='orderstatus'), nullable=False),
    sa.Column('payment_method', sa.String(length=100), nullable=True),
    sa.Column('payment_provider_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['subscription_type_id'], ['subscription_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_orders_created_at', 'orders', ['created_at'], unique=False)
    op.create_index('idx_orders_payment_provider_id', 'orders', ['payment_provider_id'], unique=False)
    op.create_index('idx_orders_status', 'orders', ['status'], unique=False)
    op.create_index('idx_orders_subscription_id', 'orders', ['subscription_id'], unique=False)
    op.create_index('idx_orders_user_id', 'orders', ['user_id'], unique=False)
    op.create_index('idx_orders_user_status', 'orders', ['user_id', 'status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_orders_user_status', table_name='orders')
    op.drop_index('idx_orders_user_id', table_name='orders')
    op.drop_index('idx_orders_subscription_id', table_name='orders')
    op.drop_index('idx_orders_status', table_name='orders')
    op.drop_index('idx_orders_payment_provider_id', table_name='orders')
    op.drop_index('idx_orders_created_at', table_name='orders')
    op.drop_table('orders')
    op.drop_index('idx_subscription_valid_until', table_name='subscriptions')
    op.drop_index('idx_subscription_user_id', table_name='subscriptions')
    op.drop_index('idx_subscription_type_id', table_name='subscriptions')
    op.drop_index('idx_subscription_status', table_name='subscriptions')
    op.drop_index('idx_subscription_auto_renew', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('idx_container_user_status', table_name='containers')
    op.drop_index('idx_container_user_id', table_name='containers')
    op.drop_index('idx_container_status', table_name='containers')
    op.drop_index('idx_container_deleted_at', table_name='containers')
    op.drop_table('containers')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_provider', table_name='users')
    op.drop_index('idx_user_is_active', table_name='users')
    op.drop_index('idx_user_email_provider', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_subscription_type_type', table_name='subscription_types')
    op.drop_index('idx_subscription_type_is_active', table_name='subscription_types')
    op.drop_index('idx_subscription_type_amount', table_name='subscription_types')
    op.drop_table('subscription_types')
    # ### end Alembic commands ###
